import math

def freq_to_note(freq):
    notes = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']

    note_number = 12 * math.log2(freq / 440) + 49  
    note_number = round(note_number)
        
    note = (note_number - 1 ) % len(notes)
    note = notes[note]
    
    octave = (note_number + 8 ) // len(notes)
    
    return note, octave

def get_frequency(note):
    notes = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']


    if len(note) == 3:  
        octave = int(note[2])
        note_name = note[:2]  
    else:  
        octave = int(note[1])
        note_name = note[0]  

    # Вычисляем номер клавиши
    key_number = notes.index(note_name)
    if key_number < 3:
        key_number = key_number + 12 + ((octave - 1) * 12) + 1
    else:
        key_number = key_number + ((octave - 1) * 12) + 1

    return 440 * 2 ** ((key_number - 49) / 12)

songs = {
    "Marcha_Imperial": {
        "notes": ["G4", "G4", "G4", "D#4/Eb4", "A#4/Bb4", "G4", "D#4/Eb4", "A#4/Bb4", "G4", "D5", "D5", "D5", "D#5/Eb5", "A#4/Bb4", "F#4/Gb4", "D#4/Eb4", "A#4/Bb4", "G4", "G5", "G4", "G4", "G5", "F#5/Gb5", "F5", "E5", "D#5/Eb5", "E5", "rest", "G4", "rest", "C#5/Db5", "C5", "B4", "A#4/Bb4", "A4", "A#4/Bb4", "rest", "D#4/Eb4", "rest", "F#4/Gb4", "D#4/Eb4", "A#4/Bb4", "G4", "D#4/Eb4", "A#4/Bb4", "G4"],
        "beats": [8, 8, 8, 6, 2, 8, 6, 2, 16, 8, 8, 8, 6, 2, 8, 6, 2, 16, 8, 6, 2, 8, 6, 2, 2, 2, 2, 6, 2, 2, 8, 6, 2, 2, 2, 2, 6, 2, 2, 9, 6, 2, 8, 6, 2, 16],
    },
    "Marcha_Imperial1": {
        "notes": ["A4", "A4", "A4", "F4", "C5", "A4", "F4", "C5", "A4", "E5", "E5", "E5", "F5", "C5", "GS4", "F4", "C5", "A4", "A5", "A4", "A4", "A5", "GS5", "G5", "FS5", "F5", "FS5", "rest", "AS4", "DS5", "D5", "CS5", "C5", "AS4", "C5", "rest", "F4", "GS4", "F4", "A4", "C5", "A4", "C5", "E5", "A5", "A4", "A4", "A5", "GS5", "G5", "FS5", "F5", "FS5", "rest", "AS4", "DS5", "D5", "CS5", "C5", "AS4", "C5", "rest", "F4", "GS4", "F4", "C5", "A4", "F4", "C4", "A4"],
        "beats": [2, 2, 2, 2.8, 6.6, 2, 2.8, 6.6, 1, 2, 2, 2, 2.8, 6.6, 2, 2.8, 6.6, 1, 2, 2.8, 6.6, 2, 4, 4, 8, 8, 4, 4, 4, 2, 4, 4, 8, 8, 4, 4, 8, 2, 2.6, 8, 2, 2.6, 8, 1, 2, 2.8, 6.6, 2, 4, 4, 8, 8, 4, 4, 4, 2, 4, 4, 8, 8, 4, 4, 4, 2, 2.6, 8, 2, 2.6, 8, 1],
    },
    "Jingle_Bells": {
        "notes": ["E5", "E5", "E5", "E5", "E5", "E5", "E5", "G5", "C5", "D5", "E5", "F5", "F5", "F5", "F5", "F5", "E5", "E5", "E5", "E5", "E5", "D5", "D5", "E5", "D5", "G5"],
        "beats": [8, 8, 4, 8, 8, 4, 8, 8, 8, 8, 2, 8, 8, 8, 8, 8, 8, 8, 16, 16, 8, 8, 8, 8, 4, 4],
    },
    "Merry_Christmas": {
        "notes": ["B3", "F4", "F4", "G4", "F4", "E4", "D4", "D4", "D4", "G4", "G4", "A4", "G4", "F4", "E4", "E4", "E4", "A4", "A4", "B4", "A4", "G4", "F4", "D4", "B3", "B3", "D4", "G4", "E4", "F4"],
        "beats": [4, 4, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 8, 8, 4, 4, 4, 2],
    },
    "Santa_Claus": {
        "notes": ["G4", "E4", "F4", "G4", "G4", "G4", "A4", "B4", "C5", "C5", "C5", "E4", "F4", "G4", "G4", "G4", "A4", "G4", "F4", "F4", "E4", "G4", "C4", "E4", "D4", "F4", "B3", "C4"],
        "beats": [8, 8, 8, 4, 4, 4, 8, 8, 4, 4, 4, 8, 8, 4, 4, 4, 8, 8, 4, 2, 4, 4, 4, 4, 4, 2, 4, 1],
    },
    "Ukraine_Anthem":{
        'notes': ['B4', 'B4', 'A4', 'B4', 'C5', 'D5', 'C5', 'B4', 'A4', 'G4', 'B4', 'F#4', 'B4', 'E4', 'F#4', 'G4', 'A4', 'B4', 'B4', 'B4', 'A4', 'B4', 'C5', 'D5', 'C5', 'B4', 'A4', 'G4', 'B4', 'F#4', 'B4', 'E4', 'E4', 'F#4', 'F#4', 'B4', 'A4', 'G4', 'F#4', 'E4', 'F#4', 'G4', 'E4', 'F#4', 'F#4', 'G4', 'G4', 'A4', 'A4', 'B4', 'B4', 'F#4', 'F#4', 'B4', 'A4', 'G4', 'F#4', 'E4', 'F#4', 'G4', 'E4', 'F#4', 'F#4', 'G4', 'B4', 'F#4', 'B4', 'E4', 'F#4', 'G4'], 
        'beats': [1285.7130000000002, 428.571, 428.571, 428.571, 428.571, 428.571, 1285.7130000000002, 428.571, 857.142, 857.142, 857.142, 857.142, 857.142, 857.142, 1285.7130000000002, 428.571, 857.142, 857.142, 1285.7130000000002, 428.571, 428.571, 428.571, 428.571, 428.571, 1285.7130000000002, 428.571, 857.142, 857.142, 857.142, 857.142, 857.142, 857.142, 1714.284, 1714.284, 1285.7130000000002, 428.571, 428.571, 428.571, 428.571, 428.571, 428.571, 428.571, 428.571, 428.571, 857.142, 857.142, 857.142, 857.142, 857.142, 857.142, 1714.284, 1714.284, 1285.7130000000002, 428.571, 428.571, 428.571, 428.571, 428.571, 428.571, 428.571, 428.571, 428.571, 857.142, 857.142, 857.142, 857.142, 857.142, 857.142, 1285.7130000000002, 428.571]
    },
    "imperial_march": {
        'notes': ['A4', 'A4', 'F4', 'C5', 'A4', 'F4', 'C5', 'A4', 
            'E5', 'E5', 'E5', 'F5', 'C5', "G#4", 'F4', 'C5', 'A4', 
            'A5', 'A4', 'F4', 'C5', 'A4', 'F4', 'C5', 'A4', 
            'E5', 'E5', 'E5', 'F5', 'C5', "G#4", 'F4', 'C5', 'A4'],
        'beats': [500, 500, 350, 150, 500, 350, 150, 1000,
            500, 500, 500, 350, 150, 500, 350, 150, 1000,
            500, 500, 350, 150, 500, 350, 150, 1000,
            500, 500, 500, 350, 150, 500, 350, 150, 1000]
    },
    "imperial_march1": {
        'notes': ['G4', 'G4', 'G4', 'D#4', 'A#4', 'G4', 'D#4', 'A#4', 'G4', 'D5', 'D5', 'D5', 'D#5', 'A#4', 'F#4', 'D#4', 'A#4', 'G4', 'G5', 'G4', 'G4', 'G5', 'F#5', 'F5', 'E5', 'D#5', 'E5', 'G#4', 'C#5', 'C5', 'B4', 'A#4', 'A4', 'A#4', 'D#4', 'F#4', 'D#4', 'F#4', 'A#4', 'G4', 'A#4', 'D5', 'G5', 'G4', 'G4', 'G5', 'F#5', 'F5', 'E5', 'D#5'], 
        'beats': [36.7646875, 560.661484375, 602.0217578125, 565.2570703125, 441.17625, 147.05875, 588.235, 450.367421875, 137.867578125, 1176.47, 588.235, 574.4482421875, 611.2129296875, 431.98507812500003, 156.249921875, 579.043828125, 427.3894921875, 160.84550781250002, 1176.47, 588.235, 450.367421875, 147.05875, 542.279140625, 477.9409375, 147.05875, 147.05875, 147.05875, 597.426171875, 294.1175, 588.235, 441.17625, 147.05875, 137.867578125, 156.249921875, 588.235, 294.1175, 602.0217578125, 441.17625, 160.84550781250002, 560.661484375, 441.17625, 160.84550781250002, 1153.4920703125001, 588.235, 450.367421875, 147.05875, 542.279140625, 477.9409375, 147.05875, 147.05875]
    },
    "UKRAINE_NATIONAL_ANTHEM":{
        'notes': ['C#5', 'C#5', 'B4', 'C#5', 'D5', 'E5', 'D5', 'C#5', 'B4', 'A4', 'C#5', 'G#4', 'C#5', 'F#4', 'F4', 'F#4', 'G#4', 'A4', 'B4', 'C#5', 'C#5', 'C#5', 'B4', 'C#5', 'D5', 'E5', 'D5', 'C#5', 'B4', 'A4', 'F#4', 'C#5', 'F4', 'F#4', 'F#4', 'G#4', 'G#4', 'C#5', 'B4', 'A4', 'G#4', 'F#4', 'G#4', 'A4', 'F#4', 'G#4', 'G#4', 'A4', 'A4', 'B4'],
        'beats': [1054.6864453125, 357.1425, 357.1425, 357.1425, 357.1425, 357.1425, 1071.4275, 357.1425, 714.285, 697.5439453125, 731.0260546874999, 731.0260546874999, 697.5439453125, 714.285, 340.40144531249996, 357.1425, 357.1425, 373.8835546875, 714.285, 714.285, 1071.4275, 357.1425, 357.1425, 340.40144531249996, 373.8835546875, 357.1425, 1054.6864453125, 357.1425, 731.0260546874999, 714.285, 714.285, 714.285, 714.285, 714.285, 1428.57, 1445.3110546875, 1054.6864453125, 357.1425, 357.1425, 357.1425, 340.40144531249996, 373.8835546875, 340.40144531249996, 357.1425, 357.1425, 373.8835546875, 714.285, 714.285, 731.0260546874999, 714.285]
        },
}

# Example usage
selected_song = "imperial_march"
notes = songs[selected_song]["notes"]
beats = songs[selected_song]["beats"]

# freq = [note_to_freq(note) if note != "rest" else 0 for note in notes]
freq = [get_frequency(note) if note != "rest" else 0 for note in notes]

beep_length = len(notes)

with open("note.h", "w") as f:
    f.write("#ifndef NOTE_H\n")
    f.write("#define NOTE_H\n\n")
    f.write("// const float freq[] = {")
    f.write(", ".join(map(str, freq)))
    f.write("};\n\n")
    f.write("// const unsigned int beats[] = {")
    f.write(", ".join(map(str, map(int, beats))))
    f.write("};\n\n")
    f.write("#define INIT_FREQ {")
    f.write(", ".join(map(str, map(int,freq))))
    f.write("}\n\n")
    f.write("#define INIT_BEATS {")
    f.write(", ".join(map(str, map(int, beats))))
    # f.write(", ".join(map(str, beats)))
    f.write("}\n\n")
    f.write(f"#define BEEP_LENGTH {beep_length}\n\n")
    f.write(f"#define BEEP_CURRENT      _IQ(1.0)\n\n")
    f.write("#endif // NOTE_H\n")
 


